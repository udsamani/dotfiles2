/*
 * Copyright: ThoughtSpot Inc. 2012
 */

package com.thoughtspot.common.errorcode;

/**
 * Error codes common to all projects.<br>
 * See doc: https://docs.google.com/a/thoughtspot.com/document/d/
 * 1Pvc7AAHRFzH9KKnOqosG8RsWshsWY9Pb1HNWp3S_28w/edit?usp=sharing
 * <p>
 * Range for Common codes - [TS-10000 to TS-10399]
 *
 * @author Vijay Ganesan
 */
public enum CommonErrorCode implements ThoughtspotErrorCode {

    /**
     * Catch All generic error.
     */
    ERROR(10000),
    /**
     * Error connecting to metadata/data store.
     */
    CONNECTION_FAIL(10001),
    /**
     * Invalid input from client to Callosum.
     */
    INVALID_INPUT(10002),
    /**
     * Authorization failure.
     */
    AUTHORIZATION_FAILURE(10003),
    /**
     * No user found in current execution context.
     */
    NO_USER_IN_CONTEXT(10004),
    /**
     * The base object that an object references is missing in store.
     */
    BASE_OBJECT_MISSING(10005),
    /**
     * Unable to connect to ZK.
     */
    ZK_CONNECTION_FAIL(10006),
    /**
     * Invalid parameters.
     */
    INVALID_PARAMETERS(10007),
    /**
     * User not found in store.
     */
    USER_NOT_FOUND(10008),
    /**
     * Failure related to HDFS on local ThoughtSpot instance.
     */
    LOCAL_HDFS_FAILURE(10010),
    /**
     * Failure related to HDFS on remote ThoughtSpot instance.
     */
    REMOTE_HDFS_FAILURE(10011),
    /**
     * Malformed URL.
     */
    MALFORMED_URL(10012),
    /**
     * Exception in processing the request on Timely service.
     */
    TIMELY_SERVICE_EXCEPTION(10013),
    /**
     * Exception in processing the request on Foolscap service.
     */
    FOOLSCAP_SERVICE_EXCEPTION(10014),
    /**
     * Exception when Foolscap returns partial success.
     */
    FOOLSCAP_SERVICE_PARTIAL_SUCCESS_EXCEPTION(10015),
    /**
     * Exception in processing the request on Nginx.
     */
    NGINX_EXCEPTION(10016),
    /**
     * Configuration not set.
     */
    NOT_CONFIGURED(10017),
    /**
     * Exception during user uploads when max file is big.
     */
    FILE_SIZE_LIMIT_EXCEEDED(10018),
    /**
     * Error while reading user data uploads.
     */
    INVALID_FILE_FORMAT(10019),
    /**
     * Error while performing sage transformation.
     */
    SAGE_TRANSFORM_EXCEPTION(10020),
    /**
     * Error during serialization.
     */
    SERIALIZATION_FAILURE(10021),
    /**
     * Error during deserialization.
     */
    DESERIALIZATION_FAILURE(10022),
    /**
     * The current operation being performed is not allowed.
     */
    FORBIDDEN(10023),
    /**
     * Exception from Export service.
     */
    EXPORT_SERVICE_EXCEPTION(10024),
    /**
     * Password not strong enough.
     */
    WEAK_PASSWORD(10025),
    /**
     * Invalid bach request (null or missing fields).
     */
    INVALID_BACH_REQUEST(10027),
    /**
     * Failure in Sage AutoComplete Thrift call.
     */
    AUTO_COMPLETE_FAILURE(10028),
    /**
     * Email not found.
     */
    EMAIL_NOT_FOUND(10029),
    /**
     * File not found.
     */
    FILE_NOT_FOUND(10030),
    /**
     * Failure in A3 server Thrift call.
     */
    A3_FAILURE(10031),
    /**
     * Failure to auto generate relationship.
     */
    INVALID_AUTORELATIONSHIP_REQUEST(10032),
    /**
     * Invalid autogen request.
     */
    INVALID_AUTOGEN_REQUEST(10033),
    /**
     * Exception in processing the request on client state upgrader service.
     */
    CLIENT_STATE_UPGRADER_SERVICE_EXCEPTION(10034),
    /**
     * Failure to get list of tables with row counts.
     */
    TABLE_LIST_REQUEST_FAILED(10035),
    /**
     * Embed action not found in store.
     */
    EMBED_ACTION_NOT_FOUND(10036),
    /**
     * File IO Exception.
     */
    INPUT_OUTPUT_EXCEPTION(10037),
    /**
     * Internal server error.
     */
    INTERNAL_SERVER_ERROR(10038),
    /**
     * Exception in processing request to node telegraf service.
     */
    NODE_TELEGRAF_EXCEPTION(10039),

    /**
     * Invalid reset password action by SSO user.
     */
    INVALID_RESET_PWD_ACTION_SSO_USER(10040),

    /**
     * Error seen when accessing/using SecureStore.
     */
    SECURE_STORE_ERROR(10041),

    /**
     * Not Implemented exception.
     */
    NOT_IMPLEMENTED_EXCEPTION(10042),

    /**
     * Occurs if user is already in a team and cannot be added to another.
     */
    ALREADY_IN_TEAM(10043),

    /**
     * Occurs when user needs to be part of a team for an operation, but is not.
     */
    TEAM_NOT_FOUND(10044),

    /**
     * Occurs when creating prospects and sending invitations via Pardot.
     */
    SEND_INVITATION_ERROR(10045),

    /**
     * Unique email violated.
     */
    EMAIL_EXISTS(10046),

    /**
     * Occurs when reading the prospect via pardot.
     */
    READ_PROSPECT_ERROR(10047),

    /**
     * Occurs when upserting the prospect via pardot.
     */
    UPSERT_PROSPECT_ERROR(10048),

    /**
     * Occurs when inviting the prospect via pardot.
     */
    INVITE_PROSPECT_ERROR(10049),

    /**
     * Unique user violated.
     */
    USER_EXISTS(10050),

    /**
     * Mapbox token API failure.
     */
    MAPBOX_TOKEN_FAILURE(10051),

    /**
     * Occurs when configuration flag setting prevents workflow from succeeding.
     */
    CONFIGURATION_ERROR(10052),

    /**
     * Private Key not found.
     */
    KEY_NOT_FOUND(10052),

    /**
     * TODO(Nikhil): Remove this in parameters phase 2.
     * Occurs when we try to create a view on top of a parameterized object.
     */
    VIEW_WITH_PARAMETER_ERROR(10053),

    /**
     * GIT API Exception code.
     */
    GIT_API_ERROR(10054),

    /**
     * Invalid subscription.
     */
    INVALID_SUBSCRIPTION(10055),

    /**
     * Invalid cohort save request parameters.
     */
    INVALID_COHORT_SAVE_PARAMETERS(10056),

    /**
     * Cohort not enabled.
     */
    COHORT_NOT_ENABLED(10057),

    /**
     * Duplicate cohort name.
     */
    COHORT_DUPLICATE_NAME(10058),

    /**
     * Cohort not enabled on answer with parameters.
     */
    COHORT_DISABLED_PARAMETERIZED_ANSWER(10059),

    /**
     * Vault store failed.
     */
    VAULT_EXCEPTION(10060),

    /**
     * Webhook already exists.
     */
    WEBHOOK_EXISTS(10061),

    /**
     * Webhook not exists.
     */
    WEBHOOK_NOT_EXISTS(10062),

    /**
     * Cohort empty name.
     */
    COHORT_EMPTY_NAME(10063),

    /**
     * Cohort on a cohort anchor column not allowed.
     */
    COHORT_ON_ANCHOR_COHORT_NOT_ALLOWED(10064),

    /**
     * File size limit exceeded.
     */
    FILE_SIZE_EXCEEDED(10065),

    /**
     * Path not found.
     */
    PATH_NOT_FOUND(10066),

    /**
     * Object in invalid state.
     */
    OBJECT_INVALID_STATE(10067),

    /**
     * Version mismatch.
     */
    VERSION_MISMATCH(10068),

    /**
     * Trying to edit an object that is published across Orgs.
     */
    CANNOT_EDIT_PUBLISHED_OBJECT(10069),

    /**
     * Invalid client type.
     */
    INVALID_CLIENT_TYPE(10069);

    /**
     * Code number that is published in documentation.
     */
    private int codeNumber = -1;

    /**
     * @param codeNumber numeric code.
     */
    CommonErrorCode(int codeNumber) {
        this.codeNumber = codeNumber;
    }

    @Override
    public int getCodeNumber() {
        return this.codeNumber;
    }
}
